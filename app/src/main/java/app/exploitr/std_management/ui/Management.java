package app.exploitr.std_management.ui;

import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;
import androidx.navigation.NavController;
import androidx.navigation.fragment.NavHostFragment;

import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.firebase.firestore.DocumentSnapshot;

import app.exploitr.std_management.ui.fragments.Foods;
import app.exploitr.std_management.ui.fragments.Offers;
import app.exploitr.std_management.ui.fragments.Orders;
import app.exploitr.storetodoor.R;
import app.exploitr.storetodoor.functions.majors.DatabaseConstants;
import app.exploitr.storetodoor.functions.majors.FirebaseAccess;
import app.exploitr.storetodoor.functions.majors.LocalDatabase;

public class Management extends AppCompatActivity {

	NavController navController;
	BottomNavigationView nav_view_man;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_management);

		if (getSupportActionBar() != null)
			getSupportActionBar().setTitle(getString(R.string.management));

		nav_view_man = findViewById(R.id.nav_view_man);

		NavHostFragment fragment = (NavHostFragment) getSupportFragmentManager().findFragmentById(R.id.nav_host_fragment_management);
		if (fragment != null) {
			navController = fragment.getNavController();
			navController.setGraph(R.navigation.management_navigation);
		} else {
			recreate();
		}

		nav_view_man.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
		nav_view_man.setSelectedItemId(R.id.nav_man_orders);

		updateMaxFoodCount();
	}

	private void updateMaxFoodCount() {
		DatabaseConstants.getFDB()
				.collection(DatabaseConstants.CONFIG)
				.document(DatabaseConstants.GENERAL)
				.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {
			@Override
			public void onSuccess(DocumentSnapshot documentSnapshot) {
				long how_much = (long) documentSnapshot.get(DatabaseConstants.MAX_FOOD_COUNT);
				LocalDatabase.getInstance(getBaseContext()).saveMaxFoodCount(how_much);
			}
		});
	}

	private final BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
			= item -> {
		Fragment fragment;
		if (item.getItemId() == R.id.nav_man_food) {
			getSupportActionBar().setTitle("Foods");
			fragment = new Foods();
		} else if (item.getItemId() == R.id.nav_man_orders) {
			getSupportActionBar().setTitle("Orders");
			fragment = new Orders();
		} else {
			getSupportActionBar().setTitle("Offers");
			fragment = new Offers();
		}
		loadFragment(fragment);
		return true;
	};

	private void loadFragment(Fragment fragment) {
		getSupportFragmentManager().beginTransaction().replace(R.id.nav_host_fragment_management, fragment).addToBackStack(null).commit();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.main_manage, menu);
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(@NonNull MenuItem item) {
		if (item.getItemId() == R.id.action_exit)
			finish();
		else if (item.getItemId() == R.id.action_sync_admin_key)
			trySyncKey();
		else if (item.getItemId() == R.id.action_change_launch_mode) {
			LocalDatabase.getInstance(getBaseContext()).setLaunchMode(
					!LocalDatabase.getInstance(getBaseContext()).isLaunchModeClient());
			Toast.makeText(getApplicationContext(), "Launch Mode Changed!", Toast.LENGTH_SHORT).show();
		}
		return super.onOptionsItemSelected(item);
	}

	private void trySyncKey() {
		FirebaseAccess.setAdminConfig(getApplicationContext());
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
	}
}