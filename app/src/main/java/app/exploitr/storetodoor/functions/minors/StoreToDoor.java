package app.exploitr.storetodoor.functions.minors;

import android.content.Context;
import android.os.Build;
import android.util.Log;
import android.widget.Toast;

import androidx.multidex.MultiDexApplication;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GoogleApiAvailability;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.safetynet.SafetyNet;

import java.lang.ref.WeakReference;

import app.exploitr.storetodoor.functions.majors.DatabaseConstants;
import app.exploitr.storetodoor.functions.majors.FirebaseAccess;
import app.exploitr.storetodoor.functions.order_system.FoodOrderManager;
import io.realm.Realm;
import io.realm.RealmConfiguration;

public class StoreToDoor extends MultiDexApplication {

	public static WeakReference<Context> usableContext;

	@Override
	public void onCreate() {
		usableContext = new WeakReference<>(getApplicationContext());

		if (GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(getApplicationContext())
				== ConnectionResult.SUCCESS) {
			SafetyNet.getClient(this).attest((Build.DEVICE + System.currentTimeMillis()).getBytes(),
					DatabaseConstants.ADV_KEY)
					.addOnSuccessListener(
							response -> Log.v("ATTEST", "SUCCESSFUL"))
					.addOnFailureListener(e -> {
						if (e instanceof ApiException) {
							// An error with the Google Play services API contains some
							// additional details.
							ApiException apiException = (ApiException) e;
							// You can retrieve the status code using the
							// apiException.getStatusCode() method.
							Log.v("ATTEST", "ERROR" + apiException.getStatus().getStatusMessage());
						}  //else ignored

						Log.v("ATTEST", "ERROR");
					});

		} else {
			Toast.makeText(this, "Update Google Services", Toast.LENGTH_SHORT).show();
			//highlight : we don't need safetynet attestation
		}
		Realm.init(getApplicationContext());

		RealmConfiguration config = new RealmConfiguration.Builder()
				.schemaVersion(2) // Must be bumped when the schema changes
				.migration((realm, oldVersion, newVersion) -> {
					//no current changes
				})
				.build();

		Realm.setDefaultConfiguration(config);

		FirebaseAccess.saveConfigUpdate(getApplicationContext());

		FoodOrderManager.activateOnce(this);
		super.onCreate();
	}
}
