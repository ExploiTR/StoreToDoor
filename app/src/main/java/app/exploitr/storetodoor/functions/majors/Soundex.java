package app.exploitr.storetodoor.functions.majors;

/******************************************************************************
 *  Compilation:  javac Soundex.java
 *  Execution:    java surname1 surname2
 *
 *
 *  % java Soundex Wohrzhick Warzick
 *  W622: Wohrzhick
 *  W622: Warzick
 *
 *  % java Soundex Smith Smyth
 *  S530: Smith
 *  S530: Smyth
 *
 *  % java Soundex Washington Lee
 *  W252: Washington
 *  L000: Lee
 *
 *  % java Soundex Pfister Jackson
 *  P236: Pfister
 *  J250: Jackson
 *
 *  % java Soundex Scott Numbers
 *  S300: Scott
 *  N516: Numbers
 *
 *  Note: we ignore the "Names with Prefix" and "Constant Separator"
 *  rules from
 *  http://www.archives.gov/research_room/genealogy/census/soundex.html
 * todo highlight
 ******************************************************************************/

public class Soundex {
	public static String getCode(String s) {
		char[] x = s.toUpperCase().toCharArray();

		if (x.length == 0)
			return "";

		char firstLetter = x[0];

		//RULE [ 2 ]
		//Convert letters to numeric code
		for (int i = 0; i < x.length; i++) {
			switch (x[i]) {
				case 'B':
				case 'F':
				case 'P':
				case 'V': {
					x[i] = '1';
					break;
				}

				case 'C':
				case 'G':
				case 'J':
				case 'K':
				case 'Q':
				case 'S':
				case 'X':
				case 'Z': {
					x[i] = '2';
					break;
				}

				case 'D':
				case 'T': {
					x[i] = '3';
					break;
				}

				case 'L': {
					x[i] = '4';
					break;
				}

				case 'M':
				case 'N': {
					x[i] = '5';
					break;
				}

				case 'R': {
					x[i] = '6';
					break;
				}

				default: {
					x[i] = '0';
					break;
				}
			}
		}

		//Remove duplicates
		//RULE [ 1 ]
		StringBuilder output = new StringBuilder("" + firstLetter);

		//RULE [ 3 ]
		for (int i = 1; i < x.length; i++)
			if (x[i] != x[i - 1] && x[i] != '0')
				output.append(x[i]);

		//RULE [ 4 ]
		//Pad with 0's or truncate
		output.append("0000");
		return output.substring(0, 4);
	}
}
