package app.exploitr.order_sync_management;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.util.Base64;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.material.button.MaterialButton;
import com.ms.square.android.expandabletextview.ExpandableTextView;

import java.nio.charset.StandardCharsets;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import app.exploitr.std_management.io.FCM_Service;
import app.exploitr.std_management.io.OrderConfigurator;
import app.exploitr.storetodoor.R;
import app.exploitr.storetodoor.functions.majors.DatabaseConstants;

@SuppressWarnings("ConstantConditions")
public class NotificationHandler extends AppCompatActivity {

	TextView order_id_text_admin_notification,
			order_time_text_admin_notification,
			order_address_text_admin_notification,
			payment_mode_text_admin_notification,
			phone_address_text_admin_notification,
			total_price_admin_notification,
			delivery_time_text_admin_notification;

	ExpandableTextView orderDesc_admin_notification;

	MaterialButton order_confirm_admin_notification;

	private String order_address = "0,0 ; 0";

	private void idd() {
		order_id_text_admin_notification = findViewById(R.id.order_id_text_admin_notification);
		order_time_text_admin_notification = findViewById(R.id.order_time_text_admin_notification);
		order_address_text_admin_notification = findViewById(R.id.order_address_text_admin_notification);
		payment_mode_text_admin_notification = findViewById(R.id.payment_mode_text_admin_notification);
		phone_address_text_admin_notification = findViewById(R.id.phone_address_text_admin_notification);
		total_price_admin_notification = findViewById(R.id.total_price_admin_notification);
		orderDesc_admin_notification = findViewById(R.id.orderDesc_admin_notification);
		order_confirm_admin_notification = findViewById(R.id.order_confirm_admin_notification);
		delivery_time_text_admin_notification = findViewById(R.id.delivery_time_text_admin_notification);
	}

	Map<String, String> TEMP;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_notification_handler);

		if (getSupportActionBar() != null)
			getSupportActionBar().setTitle("Order Confirmation");

		Map<String, String> data = new HashMap<>();
		String map;
		Intent intent = getIntent();
		if (intent != null && (map = String.valueOf(intent.getSerializableExtra(FCM_Service.DATA_TRANSFER))) != null) {
			for (String entry : map.split(",")) {
				String[] parts = entry.split("=");
				data.put(parts[0].trim(), parts[1].trim());
			}
		}

		idd();//id declaration

		TEMP = data;

		processStuff(data);
	}

	@SuppressLint("SetTextI18n")
	private void processStuff(Map<String, String> map) {

		order_address = map.get(DatabaseConstants.ORDER_ADDRESS);
		int order_delivery_charge = Integer.parseInt(map.get(DatabaseConstants.DELIVERY_CHARGE));
		int order_state = Integer.parseInt(map.get(DatabaseConstants.ORDER_STATE));
		int order_pay_mode = Integer.parseInt(map.get(DatabaseConstants.PAYMENT_MODE));
		String order_reg_token = map.get(DatabaseConstants.REG_TOKEN);
		int order_total_price = Integer.parseInt(map.get(DatabaseConstants.TOTAL_PRICE));
		String order_phone_number = map.get(DatabaseConstants.ORDER_PHONE_NUMBER);
		long order_number = Long.parseLong(map.get(DatabaseConstants.ORDER_NUMBER));
		long delivery_time = Long.parseLong(map.get(DatabaseConstants.DELIVERY_TIME));
		String uid = map.get(DatabaseConstants.USER_UID);

		//data,address,reg,admin

		String order_data = new String(Base64.decode(map.get(DatabaseConstants.ORDER_DATA), Base64.NO_PADDING), StandardCharsets.UTF_8);
		order_address = new String(Base64.decode(order_address, Base64.NO_PADDING), StandardCharsets.UTF_8);
		order_reg_token = new String(Base64.decode(order_reg_token, Base64.NO_PADDING), StandardCharsets.UTF_8);

		Calendar calendar = Calendar.getInstance();
		calendar.setTimeInMillis(order_number);
		SimpleDateFormat format = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss", Locale.getDefault());
		format.setCalendar(calendar);

		order_id_text_admin_notification.setText("Order #" + order_number);
		order_time_text_admin_notification.setText("Ordered on :" + format.format(calendar.getTime()));
		order_address_text_admin_notification.setText(order_address);
		payment_mode_text_admin_notification.setText(order_pay_mode == DatabaseConstants.PAYMENT_MODE_G_PAY ?
				"Payment Mode : Gpay" : "Payment Mode : Cash On");
		phone_address_text_admin_notification.setText(order_phone_number);
		total_price_admin_notification.setText("₹ " + (order_total_price + order_delivery_charge) + "\n(DCL)");

		calendar.setTimeInMillis(delivery_time);
		format.setCalendar(calendar);
		delivery_time_text_admin_notification.setText("Delivery expected on :" + format.format(calendar.getTime()));

		order_confirm_admin_notification.setOnClickListener(view -> {
			OrderConfigurator.confirmOrder(getApplicationContext(), uid, String.valueOf(order_number));

			String[] lat_long = order_address.split(";")[0].split(",");

			String text = "*Total Charge : ₹" + (order_total_price + order_delivery_charge) + "*\n\nDelivery time : " + format.format(delivery_time)
					+ "\n\n" + "\n\nPhone Number : " + order_phone_number
					+ "\n\n" + "Foods : " + order_data.replace("{", "").replace("}", "") + "\n\n"
					+ "Order address : " + order_address + "( http://maps.google.com/maps?saddr=" + lat_long[0] + "," + lat_long[1] + " )";

			Intent sendIntent = new Intent(Intent.ACTION_SEND);
			sendIntent.setType("text/plain");
			sendIntent.putExtra(Intent.EXTRA_TEXT, text);
			sendIntent.setPackage("com.whatsapp");
			startActivity(sendIntent);
			finish();
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.main, menu);
		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(@NonNull MenuItem item) {
		processStuff(TEMP);
		return super.onOptionsItemSelected(item);
	}

	public void processStuff(View view) {
		processStuff(TEMP);
	}
}